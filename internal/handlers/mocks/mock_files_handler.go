// Code generated by MockGen. DO NOT EDIT.
// Source: files_handler.go

// Package handlers_mocks is a generated GoMock package.
package handlers_mocks

import (
	files "file-editor/pkg/files"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockFilesService is a mock of FilesService interface.
type MockFilesService struct {
	ctrl     *gomock.Controller
	recorder *MockFilesServiceMockRecorder
}

// MockFilesServiceMockRecorder is the mock recorder for MockFilesService.
type MockFilesServiceMockRecorder struct {
	mock *MockFilesService
}

// NewMockFilesService creates a new mock instance.
func NewMockFilesService(ctrl *gomock.Controller) *MockFilesService {
	mock := &MockFilesService{ctrl: ctrl}
	mock.recorder = &MockFilesServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFilesService) EXPECT() *MockFilesServiceMockRecorder {
	return m.recorder
}

// Request mocks base method.
func (m *MockFilesService) Request(operationType files.OperationType, request interface{}) (interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Request", operationType, request)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Request indicates an expected call of Request.
func (mr *MockFilesServiceMockRecorder) Request(operationType, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Request", reflect.TypeOf((*MockFilesService)(nil).Request), operationType, request)
}
